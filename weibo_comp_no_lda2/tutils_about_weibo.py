# coding:utf8
'''
Created on 2016年7月24日

@author: Xuehj
'''
############################################################################################
###############
###############    处理 地址 和 微博 age 之类的转换
###############
############################################################################################


# 处理一条微博，返回其中可用的地址信息
def process_one_weibo_return_loclist(weibo_content):
    loc_list = []
    words_list = weibo_content.split(' ')
    for index, one_word in enumerate(words_list):
        if len(one_word) <= 1:
            continue
        
        if u'湖南' == one_word and index + 1 < len(words_list) and words_list[index + 1] == u'卫视':
            continue
        if u'北京' == one_word and u'春晚' in words_list:
            continue
        
#         盛 淮南
        if u'淮南' == one_word and u'盛' in words_list:
            continue
        
        if one_word[-1] == u'省' or one_word[-1] == u'市':
            one_word = one_word[:-1]
        if one_word[0] == u'@':
            one_word = one_word[1:]
            
        # ****************************************************
        if u'·' in one_word:
            one_word = one_word[:one_word.find(u'·')]
        if len(one_word) == 3 and one_word[:-1] == u"人":
            one_word = one_word[:-1]
        if len(one_word) > 3 and not determine_one_word_is_location(one_word):
            one_word = one_word[:2]
        if u'风景' in words_list or u"转发" in words_list or u"求转发" in words_list:
            return []
        if one_word == u'首都':
            one_word = u"北京"
        # ****************************************************
            
        if determine_one_word_is_location(one_word):
            loc_list.append(tran_loc_to_request(one_word))
            
            if u'家' in weibo_content:
                loc_list.append(tran_loc_to_request(one_word))
            
    return loc_list





# 判断一个词是不是地区名
def determine_one_word_is_location(one_word):
    pro_list = [u'北京', u'上海', u'香港', u'台湾', u'重庆', u'澳门', u'天津', u'江苏', u'浙江', u'四川', u'江西', u'福建', u'青海', u'吉林', u'贵州', u'陕西', u'山西', u'河北', u'湖北', u'辽宁', u'湖南', u'山东', u'云南', u'河南', u'广东', u'安徽', u'甘肃', u'黑龙江', u'内蒙古', u'新疆', u'广西', u'宁夏', u'西藏']
    if one_word in pro_list:
        return True
    city_list = [u'常州', u'连云港', u'深圳', u'泰州', u'南京', u'扬州', u'镇江', u'宿迁', u'盐城', u'徐州', u'南通', u'淮安', u'无锡', u'苏州', u'湖州', u'杭州', u'舟山', u'嘉兴', u'衢州', u'金华', u'宁波', u'台州', u'绍兴', u'广元', u'凉山彝族自治州', u'绵阳', u'资阳', u'巴中', u'德阳', u'眉山', u'甘孜藏族自治州', u'成都', u'乐山', u'阿坝藏族羌族自治州', u'内江', u'自贡', u'攀枝花', u'达州', u'宜宾', u'泸州', u'遂宁', u'雅安', u'南充', u'广安', u'赣州', u'上饶', u'宜春', u'抚州', u'新余', u'吉安', u'南昌', u'鹰潭', u'景德镇', u'九江', u'萍乡', u'宁德', u'三明', u'福州', u'南平', u'龙岩', u'莆田', u'泉州', u'漳州', u'西宁', u'果洛藏族自治州', u'海东地区', u'黄南藏族自治州', u'海南藏族自治州', u'海北藏族自治州', u'玉树藏族自治州', u'海西蒙古族藏族自治州', u'辽源', u'延边朝鲜族自治州', u'白城', u'四平', u'长春', u'通化', u'吉林', u'白山', u'松原', u'黔南布依族苗族自治州', u'六盘水', u'贵阳', u'遵义', u'铜仁地区', u'毕节地区', u'安顺', u'黔东南苗族侗族自治州', u'黔西南布依族苗族自治州', u'西安', u'延安', u'汉中', u'宝鸡', u'榆林', u'渭南', u'咸阳', u'安康', u'铜川', u'商洛', u'晋城', u'晋中', u'阳泉', u'忻州', u'朔州', u'大同', u'运城', u'太原', u'吕梁', u'临汾', u'长治', u'廊坊', u'衡水', u'邢台', u'石家庄', u'沧州', u'保定', u'邯郸', u'张家口', u'承德', u'唐山', u'秦皇岛', u'荆门', u'十堰', u'荆州', u'恩施土家族苗族自治州', u'随州', u'黄冈', u'咸宁', u'宜昌', u'襄樊', u'孝感', u'黄石', u'营口', u'沈阳', u'辽阳', u'大连', u'朝阳', u'抚顺', u'本溪', u'鞍山', u'葫芦岛', u'盘锦', u'丹东', u'锦州', u'阜新', u'铁岭', u'怀化', u'长沙', u'常德', u'岳阳', u'株洲', u'湘西土家族苗族自治州', u'张家界', u'湘潭', u'益阳', u'娄底', u'衡阳', u'郴州', u'永州', u'邵阳', u'枣庄', u'德州', u'济南', u'济宁', u'菏泽', u'滨州', u'烟台', u'潍坊', u'聊城', u'日照', u'泰安', u'东营', u'临沂', u'青岛', u'威海', u'淄博', u'玉溪', u'曲靖', u'西双版纳傣族自治州', u'文山壮族苗族自治州', u'德宏傣族景颇族自治州', u'保山', u'昭通', u'迪庆藏族自治州', u'普洱', u'昆明', u'丽江', u'楚雄彝族自治州', u'红河哈尼族彝族自治州', u'临沧', u'怒江傈僳族自治州', u'大理白族自治州', u'新乡', u'驻马店', u'南阳', u'漯河', u'安阳', u'平顶山', u'商丘', u'开封', u'郑州', u'濮阳', u'三门峡', u'周口', u'焦作', u'信阳', u'许昌', u'洛阳', u'广州', u'湛江', u'汕尾', u'汕头', u'梅州', u'云浮', u'阳江', u'清远', u'茂名', u'揭阳', u'惠州', u'潮州', u'河源', u'韶关', u'肇庆', u'江门', u'六安', u'淮南', u'铜陵', u'宣城', u'阜阳', u'宿州', u'滁州', u'黄山', u'蚌埠', u'淮北', u'安庆', u'亳州', u'马鞍山', u'巢湖', u'芜湖', u'池州', u'合肥', u'临夏回族自治州', u'白银', u'陇南', u'金昌', u'兰州', u'武威', u'定西', u'酒泉', u'甘南藏族自治州', u'庆阳', u'天水', u'张掖', u'平凉', u'齐齐哈尔', u'大兴安岭地区', u'鸡西', u'黑河', u'佳木斯', u'哈尔滨', u'牡丹江', u'双鸭山', u'七台河', u'大庆', u'绥化', u'伊春', u'鹤岗', u'兴安盟', u'呼伦贝尔', u'乌兰察布', u'巴彦淖尔', u'锡林郭勒盟', u'鄂尔多斯', u'通辽', u'赤峰', u'呼和浩特', u'阿拉善盟', u'包头', u'伊犁哈萨克自治州', u'博尔塔拉蒙古自治州', u'巴音郭楞蒙古自治州', u'乌鲁木齐', u'和田地区', u'喀什地区', u'哈密地区', u'阿勒泰地区', u'克孜勒苏柯尔克孜自治州', u'昌吉回族自治州', u'阿克苏地区', u'吐鲁番地区', u'塔城地区', u'贵港', u'河池', u'贺州', u'柳州', u'北海', u'玉林', u'桂林', u'百色', u'钦州', u'梧州', u'来宾', u'崇左', u'南宁', u'防城港', u'石嘴山', u'中卫', u'吴忠', u'固原', u'银川', u'那曲地区', u'昌都地区', u'拉萨', u'山南地区', u'林芝地区', u'日喀则地区', u'阿里地区']
    if one_word in city_list:
        return True
    return False


# 对于一个 是地区名 ， 返回其对应的 loc（用于构造答案）
def tran_loc_to_request(untransform_location):
    zhixia_city = [u'北京', u'上海', u'香港', u'台湾', u'重庆', u'澳门', u'天津']
    if untransform_location in zhixia_city:
        return tranform_loc(untransform_location)
    
    pro_map_city = [
    [u'江苏', u'常州', u'连云港', u'泰州', u'南京', u'扬州', u'镇江', u'宿迁', u'盐城', u'徐州', u'南通', u'淮安', u'无锡', u'苏州'],
    [u'浙江', u'湖州', u'杭州', u'舟山', u'嘉兴', u'衢州', u'金华', u'宁波', u'台州', u'绍兴'],
    [u'四川', u'广元', u'凉山彝族自治州', u'绵阳', u'资阳', u'巴中', u'德阳', u'眉山', u'甘孜藏族自治州', u'成都', u'乐山', u'阿坝藏族羌族自治州', u'内江', u'自贡', u'攀枝花', u'达州', u'宜宾', u'泸州', u'遂宁', u'雅安', u'南充', u'广安'],
    [u'江西', u'赣州', u'上饶', u'宜春', u'抚州', u'新余', u'吉安', u'南昌', u'鹰潭', u'景德镇', u'九江', u'萍乡'],
    [u'福建', u'宁德', u'三明', u'福州', u'南平', u'龙岩', u'莆田', u'泉州', u'漳州'],
    [u'青海', u'西宁', u'果洛藏族自治州', u'海东地区', u'黄南藏族自治州', u'海南藏族自治州', u'海北藏族自治州', u'玉树藏族自治州', u'海西蒙古族藏族自治州'],
    [u'吉林', u'辽源', u'延边朝鲜族自治州', u'白城', u'四平', u'长春', u'通化', u'吉林', u'白山', u'松原'],
    [u'贵州', u'黔南布依族苗族自治州', u'六盘水', u'贵阳', u'遵义', u'铜仁地区', u'毕节地区', u'安顺', u'黔东南苗族侗族自治州', u'黔西南布依族苗族自治州'],
    [u'陕西', u'西安', u'延安', u'汉中', u'宝鸡', u'榆林', u'渭南', u'咸阳', u'安康', u'铜川', u'商洛'],
    [u'山西', u'晋城', u'晋中', u'阳泉', u'忻州', u'朔州', u'大同', u'运城', u'太原', u'吕梁', u'临汾', u'长治'],
    [u'河北', u'廊坊', u'衡水', u'邢台', u'石家庄', u'沧州', u'保定', u'邯郸', u'张家口', u'承德', u'唐山', u'秦皇岛'],
    [u'湖北', u'荆门', u'十堰', u'荆州', u'恩施土家族苗族自治州', u'随州', u'黄冈', u'咸宁', u'宜昌', u'襄樊', u'孝感', u'黄石'],
    [u'辽宁', u'营口', u'沈阳', u'辽阳', u'大连', u'朝阳', u'抚顺', u'本溪', u'鞍山', u'葫芦岛', u'盘锦', u'丹东', u'锦州', u'阜新', u'铁岭'],
    [u'湖南', u'怀化', u'长沙', u'常德', u'岳阳', u'株洲', u'湘西土家族苗族自治州', u'张家界', u'湘潭', u'益阳', u'娄底', u'衡阳', u'郴州', u'永州', u'邵阳'],
    [u'山东', u'枣庄', u'德州', u'济南', u'济宁', u'菏泽', u'滨州', u'烟台', u'潍坊', u'聊城', u'日照', u'泰安', u'东营', u'临沂', u'青岛', u'威海', u'淄博'],
    [u'云南', u'玉溪', u'曲靖', u'西双版纳傣族自治州', u'文山壮族苗族自治州', u'德宏傣族景颇族自治州', u'保山', u'昭通', u'迪庆藏族自治州', u'普洱', u'昆明', u'丽江', u'楚雄彝族自治州', u'红河哈尼族彝族自治州', u'临沧', u'怒江傈僳族自治州', u'大理白族自治州'],
    [u'河南', u'新乡', u'驻马店', u'南阳', u'漯河', u'安阳', u'平顶山', u'商丘', u'开封', u'郑州', u'濮阳', u'三门峡', u'周口', u'焦作', u'信阳', u'许昌', u'洛阳'],
    [u'广东', u'深圳', u'广州', u'湛江', u'汕尾', u'汕头', u'梅州', u'云浮', u'阳江', u'清远', u'茂名', u'揭阳', u'惠州', u'潮州', u'河源', u'韶关', u'肇庆', u'江门'],
    [u'安徽', u'六安', u'淮南', u'铜陵', u'宣城', u'阜阳', u'宿州', u'滁州', u'黄山', u'蚌埠', u'淮北', u'安庆', u'亳州', u'马鞍山', u'巢湖', u'芜湖', u'池州', u'合肥'],
    [u'甘肃', u'临夏回族自治州', u'白银', u'陇南', u'金昌', u'兰州', u'武威', u'定西', u'酒泉', u'甘南藏族自治州', u'庆阳', u'天水', u'张掖', u'平凉'],
    [u'黑龙江', u'齐齐哈尔', u'大兴安岭地区', u'鸡西', u'黑河', u'佳木斯', u'哈尔滨', u'牡丹江', u'双鸭山', u'七台河', u'大庆', u'绥化', u'伊春', u'鹤岗'],
    [u'内蒙古', u'兴安盟', u'呼伦贝尔', u'乌兰察布', u'巴彦淖尔', u'锡林郭勒盟', u'鄂尔多斯', u'通辽', u'赤峰', u'呼和浩特', u'阿拉善盟', u'包头'],
    [u'新疆', u'伊犁哈萨克自治州', u'博尔塔拉蒙古自治州', u'巴音郭楞蒙古自治州', u'乌鲁木齐', u'和田地区', u'喀什地区', u'哈密地区', u'阿勒泰地区', u'克孜勒苏柯尔克孜自治州', u'昌吉回族自治州', u'阿克苏地区', u'吐鲁番地区', u'塔城地区'],
    [u'广西', u'贵港', u'河池', u'贺州', u'柳州', u'北海', u'玉林', u'桂林', u'百色', u'钦州', u'梧州', u'来宾', u'崇左', u'南宁', u'防城港'],
    [u'宁夏', u'石嘴山', u'中卫', u'吴忠', u'固原', u'银川'],
    [u'西藏', u'那曲地区', u'昌都地区', u'拉萨', u'山南地区', u'林芝地区', u'日喀则地区', u'阿里地区']]

    for i in pro_map_city:
        if untransform_location in i:
            return tranform_loc(i[0])
    # 'None'
    return untransform_location
    





# 东北：辽宁,吉林,黑龙江
# 
#       华北：河北,山西,内蒙古,北京,天津
# 
#       华东：山东,江苏,安徽,浙江,台湾,福建,江西,上海
# 
#       华中：河南,湖北,湖南
# 
#       华南：广东,广西,海南,香港,澳门
# 
#       西南：云南,贵州,四川,西藏
# 
#       西北：新疆,陕西,宁夏,青海,甘肃
# 
#       境外：其他
def tranform_loc(location):
    if location in [u'东北', u'华北', u'华东', u'华中', u'华南', u'西南', u'西北', u'境外']:
        return location
    
    if location in [u'辽宁', u'吉林', u'黑龙江']:
        return u'东北'
    if location in [u'河北', u'山西', u'内蒙古', u'北京', u'天津']:
        return u'华北'
    if location in [u'山东', u'江苏', u'安徽', u'浙江', u'台湾', u'福建', u'江西', u'上海']:
        return u'华东'
    if location in [u'河南', u'湖北', u'湖南']:
        return u'华中'
    if location in [u'广东', u'广西', u'海南', u'香港', u'澳门']:
        return u'华南'
    if location in [u'云南', u'贵州', u'四川', u'西藏', u'重庆']:
        return u'西南'
    if location in [u'新疆', u'陕西', u'宁夏', u'青海', u'甘肃']:
        return u'西北'
    if location in [u'其他']:
        return u'境外'
    
    return location


# -1979/1980-1989/1990+
def tranfiorm_age(age):
    if age < 1980:
        return u'-1979'
    if age > 1990:
        return u'1990+'
    return u"1980-1989"





if __name__ == '__main__':
    loc_list = process_one_weibo_return_loclist(u'军训 完毕 ， 返回 保定 培训 [ 惊恐 ] 北京 · 琉璃 河  显示 地图 湖南 ')
    print ' '.join(loc_list)
    print determine_one_word_is_location(u'保定')
    print tran_loc_to_request(u'保定')
    pass
